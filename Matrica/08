/**
Korisnik prvo unosi broj N. Zatim unosi matricu N x N . Za svaku vrstu ispisati najvedi neparan broj
u toj vrsti, i koliko se puta on pojavio. Za svaku kolonu ispisati najmanji paran broj u toj koloni, i koliko se
puta on pojavio. Ukoliko se u vrsti ne nalazi ni jedan neparan broj tu vrstu izostaviti u ispisu, takoÄ‘e ako
se u koloni ne nalazi ni jedan paran tu kolonu izostaviti. Pretpostaviti da je maksimalna dimenzija
matrice 100 x 100.

primer:
4
2 2 13 13
5 1 7 19
0 3 1 3
1 2 3 4
izlaz:
red 1: 13 2
red 2: 19 1
red 3: 3 2
red 4: 3 1
kolona 1: 2 1
kolona 2: 2 2
kolona 4: 4 1
*/


#include <stdio.h>
#include <stdlib.h>
#include <limits.h>
#include <math.h>

int main()
{   int mat[100][100];
    int n, usor=0, usok=0, counterr=1, counterk=1;
    scanf("%d", &n);
    for(int i=1; i<=n; i++)
    {
        for(int j=1; j<=n; j++)
        {
            scanf("%d", &mat[i][j]);
        }
    }
    int min=999, max=0;
    for(int i=1; i<=n; i++)
    {
        for(int j=1; j<=n; j++)
        {
            if(mat[i][j]%2==1)
            {
                if(mat[i][j]>=max)
                {   if(mat[i][j]!=max) usor=1;
                    if(usor && mat[i][j]==max)
                    {
                        counterr++;}
                    max=mat[i][j];
                }
            }

        }
        if(max==0){}else{
        printf("Najveci neparni element u %d. redu: %d, broj ponavljnja %d\n", i, max, counterr);
        max=0;
        counterr=1;
        usor=0;}
    }
    for(int j=1; j<=n; j++)
    {
        for(int i=1; i<=n; i++)
        {
            if(mat[i][j]%2==0)
            {
                if(mat[i][j]<=min)
                {
                    if(mat[i][j]!=min) usok=1;
                    if(usok && mat[i][j]==min)
                    {
                        counterk++;
                    }
                    min=mat[i][j];
                }
            }
        }
        if(min==999){}
        else{
            printf("Najmanji parni element u %d. koloni: %d, broj ponavljanja %d\n",j, min, counterk);
            min=999;
            usok=0;
            counterk=1;
        }
    }

    return 0;
}
