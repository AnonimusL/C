/*

Napisati program koji ucitava kvadratnu matricu celih brojeva vecih od 0, dimenzija vecih od 2 i transformise je tako sto odseca 
bocne elemente i ostavlja elemente u obliku pescanika (privremeno se moze upisati broj umesto odsecenih elemenata), zatim odsecene delove 
popunjava po vrstama, tako sto levo upisuje najveci element vrste (elementi koji ostaju posle odsecanja), a desno najmanji iz vrste.
      
n=6;
    Pocetna:                   1. korak                Transformisana:
    1 3 5 6 7 5                1 3 5 6 7 5             1 3 5 6 7 5
    2 3 4 5 1 6                  3 4 5 1               5 3 4 5 1 1
    5 5 1 3 4 8                    1 3                 3 3 1 3 1 1
    1 3 7 8 7 9                    7 8                 8 8 7 8 7 7
    9 2 3 4 5 0                  2 3 4 5               5 2 3 4 5 2
    3 4 1 2 6 4                3 4 1 2 6 4             3 4 1 2 6 4
n=5;
    Pocetna:                  1. korak                Transformisana:
    1 3 5 6 7                 1 3 5 6 7               1 3 5 6 7 
    2 3 4 5 1                   3 4 5                 5 3 4 5 3
    5 5 1 3 4                     1                   1 1 1 1 1
    1 3 7 8 7                   3 7 8                 8 3 7 8 3
    9 2 3 4 5                 9 2 3 4 5               9 2 3 4 5 
                   
*/

#include <stdio.h>
#include <stdlib.h>

int main()
{
    int n, i, j, p, ft=1, max, min;
    scanf("%d", &n);
    int matrix[n][n];
    for(i=0; i<n; i++)
    {
        for(j=0; j<n; j++)
        {
            scanf("%d", &matrix[i][j]);
        }
    }
    printf("\n");
    for(i=0; i<n; i++)
    {
        for(j=0; j<n; j++)
        {
            if(i+j<n-1 && i>j)
            {
                matrix[i][j]=-1;
            }
            if(i+j>n-1 && i<j)
            {
                matrix[i][j]=-1;
            }
        }
    }

    for(i=0; i<n; i++)
    {
        for(j=0; j<n; j++)
        {
            if(matrix[i][j]<0)
            {
                for(p=0; p<n; p++)
                {
                    if(matrix[i][p]>=0)
                        {
                        if(ft)
                        {
                           max=matrix[i][p];
                           min=matrix[i][p];
                           ft=0;
                        }
                        if(matrix[i][p]>max) max=matrix[i][p];
                        if(matrix[i][p]<min) min=matrix[i][p];
                        }
                }
                if(i+j<n-1 && i>j) matrix[i][j]=max;
                if(i+j>n-1 && i<j) matrix[i][j]=min;
            }
        }
        ft=1;
    }

    for(i=0; i<n; i++)
    {
        for(j=0; j<n; j++)
        {
            printf("%d ", matrix[i][j]);
        }
        printf("\n");
    }
    return 0;
}
